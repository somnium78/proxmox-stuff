#!/bin/bash
#
# Check_MK Local Check: Corosync Status
# File: /usr/lib/check_mk_agent/local/corosync_status
#
# Monitors Corosync cluster communication
# Author: somnium78
# Version: 1.0.0
# Date: 2025-08-30
#

check_corosync_status() {
    if ! command -v corosync-quorumtool >/dev/null 2>&1; then
        echo "2 Corosync_Status - CRITICAL: corosync-quorumtool command not found"
        return
    fi

    # Check quorum status
    quorum_info=$(corosync-quorumtool -s 2>/dev/null)

    if [ $? -ne 0 ]; then
        echo "2 Corosync_Status - CRITICAL: Failed to query corosync quorum"
        return
    fi

    # Parse quorum information
    quorate=$(echo "$quorum_info" | grep "Quorate:" | awk '{print $2}')
    nodes=$(echo "$quorum_info" | grep "Nodes:" | awk '{print $2}')
    expected_votes=$(echo "$quorum_info" | grep "Expected votes:" | awk '{print $3}')
    highest_expected=$(echo "$quorum_info" | grep "Highest expected:" | awk '{print $3}')
    total_votes=$(echo "$quorum_info" | grep "Total votes:" | awk '{print $3}')
    quorum_votes=$(echo "$quorum_info" | grep "Quorum:" | awk '{print $2}')

    # Check corosync-cfgtool for ring status
    ring_status=0
    if command -v corosync-cfgtool >/dev/null 2>&1; then
        ring_info=$(corosync-cfgtool -s 2>/dev/null)
        if [ $? -eq 0 ]; then
            # Count FAULTY rings
            faulty_rings=$(echo "$ring_info" | grep -c "FAULTY")
            if [ $faulty_rings -eq 0 ]; then
                ring_status=1
            fi
        fi
    fi

    # Convert quorate to numeric
    if [ "$quorate" = "Yes" ]; then
        quorate_num=1
    else
        quorate_num=0
    fi

    # Determine status
    if [ $quorate_num -eq 0 ]; then
        status=2
        state="CRITICAL"
    elif [ $ring_status -eq 0 ]; then
        status=1
        state="WARNING"
    else
        status=0
        state="OK"
    fi

    echo "$status Corosync_Status nodes=$nodes;quorate=$quorate_num;expected_votes=$expected_votes;total_votes=$total_votes;ring_healthy=$ring_status $state: Corosync ($nodes nodes, quorate: $quorate, votes: $total_votes/$expected_votes)"
}

check_corosync_status
