#!/bin/bash
#
# Check_MK Local Check: ZFS Pool Health
# File: /usr/lib/check_mk_agent/local/zfs_pools
#
# Monitors ZFS pool health, status and capacity
# Author: somnium78
# Version: 1.0.0
# Date: 2025-08-30
#

check_zfs_pools() {
    if ! command -v zpool >/dev/null 2>&1; then
        echo "2 ZFS_Pools - CRITICAL: zpool command not found"
        return
    fi

    # Get pool status
    pool_status=$(zpool status 2>/dev/null)

    if [ $? -ne 0 ]; then
        echo "2 ZFS_Pools - CRITICAL: Failed to query ZFS pools"
        return
    fi

    # Count pools by status
    total_pools=$(echo "$pool_status" | grep -c "pool:")

    if [ $total_pools -eq 0 ]; then
        echo "1 ZFS_Pools - WARNING: No ZFS pools found"
        return
    fi

    healthy_pools=$(echo "$pool_status" | grep -A1 "pool:" | grep -c "state: ONLINE")
    degraded_pools=$(echo "$pool_status" | grep -A1 "pool:" | grep -c "state: DEGRADED")
    faulted_pools=$(echo "$pool_status" | grep -A1 "pool:" | grep -c "state: FAULTED")
    unavail_pools=$(echo "$pool_status" | grep -A1 "pool:" | grep -c "state: UNAVAIL")

    # Check for scrub in progress
    scrub_in_progress=$(echo "$pool_status" | grep -c "scrub in progress")

    # Check for errors
    read_errors=$(echo "$pool_status" | awk '/errors:/ {sum += $2} END {print sum+0}')
    write_errors=$(echo "$pool_status" | awk '/errors:/ {sum += $3} END {print sum+0}')
    cksum_errors=$(echo "$pool_status" | awk '/errors:/ {sum += $4} END {print sum+0}')

    total_errors=$((read_errors + write_errors + cksum_errors))

    # Determine status
    if [ $faulted_pools -gt 0 ] || [ $unavail_pools -gt 0 ] || [ $total_errors -gt 0 ]; then
        status=2
        state="CRITICAL"
    elif [ $degraded_pools -gt 0 ]; then
        status=1
        state="WARNING"
    else
        status=0
        state="OK"
    fi

    echo "$status ZFS_Pools total=$total_pools;healthy=$healthy_pools;degraded=$degraded_pools;faulted=$faulted_pools;scrub_active=$scrub_in_progress;errors=$total_errors $state: $total_pools pools ($healthy_pools healthy, $degraded_pools degraded, $faulted_pools faulted, $total_errors errors)"
}

check_zfs_pools
