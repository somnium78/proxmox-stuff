#!/bin/bash
#
# Check_MK Local Check: LINSTOR Nodes
# File: /usr/lib/check_mk_agent/local/linstor_nodes
#
# Monitors LINSTOR cluster node availability
# Uses JSON API for reliable data parsing
#
# Author: somnium78
# Version: 1.0.0
# Date: 2025-08-30
#

check_linstor_nodes() {
    if ! command -v linstor >/dev/null 2>&1; then
        echo "2 LINSTOR_Nodes - CRITICAL: linstor command not found"
        return
    fi

    nodes_json=$(linstor -m node list 2>/dev/null)

    if [ $? -ne 0 ]; then
        echo "2 LINSTOR_Nodes - CRITICAL: Failed to query LINSTOR nodes"
        return
    fi

        satellite_nodes=$(echo "$nodes_json" | grep -c '"type": "SATELLITE"')
    controller_nodes=$(echo "$nodes_json" | grep -c '"type": "CONTROLLER"')
    combined_nodes=$(echo "$nodes_json" | grep -c '"type": "COMBINED"')

    total_nodes=$((satellite_nodes + controller_nodes + combined_nodes))

    if [ $total_nodes -eq 0 ]; then
        echo "2 LINSTOR_Nodes - CRITICAL: No node data found"
        return
    fi

    online_nodes=$(echo "$nodes_json" | grep -c '"connection_status": "ONLINE"')
    offline_nodes=$(echo "$nodes_json" | grep -c '"connection_status": "OFFLINE"')
    evicted_nodes=$(echo "$nodes_json" | grep -c '"connection_status": "EVICTED"')
    unknown_nodes=$(echo "$nodes_json" | grep -c '"connection_status": "UNKNOWN"')

    if [ $evicted_nodes -gt 0 ]; then
        status=2
        state="CRITICAL"
    elif [ $offline_nodes -gt 0 ] || [ $unknown_nodes -gt 0 ]; then
        status=1
        state="WARNING"
    else
        status=0
        state="OK"
    fi

    echo "$status LINSTOR_Nodes total=$total_nodes;online=$online_nodes;offline=$offline_nodes;evicted=$evicted_nodes $state: $total_nodes nodes ($online_nodes online, $offline_nodes offline, $evicted_nodes evicted)"
}

check_linstor_nodes
