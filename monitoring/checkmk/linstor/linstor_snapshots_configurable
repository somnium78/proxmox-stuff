#!/bin/bash
#
# Check_MK Local Check: LINSTOR Snapshots (Configurable)
# File: /usr/lib/check_mk_agent/local/linstor_snapshots
#
# Set WARN_ON_NO_SNAPSHOTS=1 to warn when no snapshots exist
# Set WARN_ON_NO_SNAPSHOTS=0 for normal behavior (default)
#
WARN_ON_NO_SNAPSHOTS=0

check_linstor_snapshots() {
    if ! command -v linstor >/dev/null 2>&1; then
        echo "2 LINSTOR_Snapshots - CRITICAL: linstor command not found"
        return
    fi

    snapshots_json=$(linstor -m snapshot list 2>/dev/null)

    if [ $? -ne 0 ]; then
        echo "2 LINSTOR_Snapshots - CRITICAL: Failed to query LINSTOR snapshots"
        return
    fi

    total_snapshots=$(echo "$snapshots_json" | grep -c '"snapshot_name"')
    successful_snapshots=$(echo "$snapshots_json" | grep -c '"successful": true')
    failed_snapshots=$(echo "$snapshots_json" | grep -c '"successful": false')
    in_backup_snapshots=$(echo "$snapshots_json" | grep -c '"IN_BACKUP"')

    # Determine status with configurable behavior
    if [ $failed_snapshots -gt 0 ]; then
        status=2
        state="CRITICAL"
        message="$total_snapshots snapshots ($successful_snapshots successful, $failed_snapshots failed, $in_backup_snapshots in backup)"
    elif [ $total_snapshots -eq 0 ] && [ $WARN_ON_NO_SNAPSHOTS -eq 1 ]; then
        status=1
        state="WARNING"
        message="No snapshots found (backup monitoring enabled)"
    elif [ $total_snapshots -eq 0 ]; then
        status=0
        state="OK"
        message="No snapshots configured (this is normal)"
    else
        status=0
        state="OK"
        message="$total_snapshots snapshots ($successful_snapshots successful, $failed_snapshots failed, $in_backup_snapshots in backup)"
    fi

    echo "$status LINSTOR_Snapshots total=$total_snapshots;successful=$successful_snapshots;failed=$failed_snapshots;in_backup=$in_backup_snapshots $state: $message"
}

check_linstor_snapshots
