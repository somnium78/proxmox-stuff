#!/bin/bash
#
# Check_MK Local Check: LINSTOR Network
# File: /usr/lib/check_mk_agent/local/linstor_network
#
# Monitors LINSTOR network interfaces and connectivity
# Uses JSON API for reliable data parsing
#
# Author: somnium78
# Version: 1.0.0
# Date: 2025-08-30
#

check_linstor_network() {
    if ! command -v linstor >/dev/null 2>&1; then
        echo "2 LINSTOR_Network - CRITICAL: linstor command not found"
        return
    fi

    nodes_json=$(linstor -m node list 2>/dev/null)

    if [ $? -ne 0 ]; then
        echo "2 LINSTOR_Network - CRITICAL: Failed to query LINSTOR nodes"
        return
    fi

    # Count network interfaces
    total_interfaces=$(echo "$nodes_json" | grep -c '"name": "default"')
    active_interfaces=$(echo "$nodes_json" | grep -c '"is_active": true')
    inactive_interfaces=$(echo "$nodes_json" | grep -c '"is_active": false')

    # Count encryption types
    plain_interfaces=$(echo "$nodes_json" | grep -c '"satellite_encryption_type": "PLAIN"')
    ssl_interfaces=$(echo "$nodes_json" | grep -c '"satellite_encryption_type": "SSL"')

    # Check for non-standard ports
    standard_port_count=$(echo "$nodes_json" | grep -c '"satellite_port": 3366')
    custom_port_count=$((total_interfaces - standard_port_count))

    # Determine status
    if [ $inactive_interfaces -gt 0 ]; then
        status=1
        state="WARNING"
    elif [ $total_interfaces -eq 0 ]; then
        status=2
        state="CRITICAL"
    else
        status=0
        state="OK"
    fi

    echo "$status LINSTOR_Network total=$total_interfaces;active=$active_interfaces;inactive=$inactive_interfaces;ssl=$ssl_interfaces;custom_ports=$custom_port_count $state: $total_interfaces interfaces ($active_interfaces active, $ssl_interfaces SSL, $custom_port_count custom ports)"
}

check_linstor_network
