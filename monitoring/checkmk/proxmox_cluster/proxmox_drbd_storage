#!/bin/bash
#
# Check_MK Local Check: Proxmox DRBD Storage (External Controller)
# File: /usr/lib/check_mk_agent/local/proxmox_drbd_storage
#
# Monitors Proxmox DRBD storage with external LINSTOR controller
# Author: somnium78
# Version: 1.1.0
# Date: 2025-08-30
#

check_proxmox_drbd_storage() {
    # Get DRBD storage configuration from Proxmox
    if [ ! -f /etc/pve/storage.cfg ]; then
        echo "2 Proxmox_DRBD_Storage - CRITICAL: Proxmox storage config not found"
        return
    fi

    # Extract DRBD storages and controller info
    drbd_config=$(awk '/^drbd:/{flag=1} flag && /^$/{flag=0} flag' /etc/pve/storage.cfg 2>/dev/null)

    if [ -z "$drbd_config" ]; then
        echo "0 Proxmox_DRBD_Storage total=0;active=0;disabled=0;controller_reachable=0 OK: No DRBD storages configured"
        return
    fi

    # Count DRBD storages
    total_drbd=$(echo "$drbd_config" | grep -c "^drbd:")

    # Extract controller IP
    controller_ip=$(echo "$drbd_config" | grep "controller" | awk '{print $2}' | head -1)

    # Check if this node is in the DRBD nodes list
    current_node=$(hostname)
    node_in_drbd=0
    if echo "$drbd_config" | grep "nodes" | grep -q "$current_node"; then
        node_in_drbd=1
    fi

    # Test controller reachability
    controller_reachable=0
    if [ -n "$controller_ip" ]; then
        if ping -c 1 -W 2 "$controller_ip" >/dev/null 2>&1; then
            controller_reachable=1
        fi
    fi

    # Check storage status in Proxmox
    active_drbd=0
    disabled_drbd=0

    # Use pvesh to check storage status
    if command -v pvesh >/dev/null 2>&1; then
        storage_list=$(pvesh get /storage --output-format json 2>/dev/null)
        if [ $? -eq 0 ] && [ -n "$storage_list" ]; then
            # Parse JSON manually for DRBD storages
            drbd_storages_json=$(echo "$storage_list" | grep -A 10 -B 2 '"type":"drbd"')
            if [ -n "$drbd_storages_json" ]; then
                active_drbd=$(echo "$drbd_storages_json" | grep -c '"enabled":1')
                disabled_drbd=$(echo "$drbd_storages_json" | grep -c '"enabled":0')
            fi
        fi
    fi

    # Fallback: assume configured storages are active
    if [ $active_drbd -eq 0 ] && [ $total_drbd -gt 0 ] && [ $node_in_drbd -eq 1 ]; then
        active_drbd=$total_drbd
    fi

    # Determine status
    if [ $node_in_drbd -eq 0 ]; then
        # Node not part of DRBD cluster - this is OK
        status=0
        state="OK"
        message="Node $current_node not in DRBD cluster"
    elif [ $controller_reachable -eq 0 ]; then
        status=2
        state="CRITICAL"
        message="DRBD controller $controller_ip not reachable"
    elif [ $active_drbd -eq 0 ] && [ $total_drbd -gt 0 ]; then
        status=1
        state="WARNING"
        message="No active DRBD storages found"
    else
        status=0
        state="OK"
        message="$total_drbd DRBD storages on $current_node ($active_drbd active, controller: $controller_ip reachable)"
    fi

    echo "$status Proxmox_DRBD_Storage total=$total_drbd;active=$active_drbd;disabled=$disabled_drbd;controller_reachable=$controller_reachable $state: $message"
}

check_proxmox_drbd_storage